{"version":3,"sources":["../../src/controller/account.js"],"names":["config","db","api","get","req","res","status","send","user","post","register","username","body","email","password","err","account","authenticate","session","scope","logout","json"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;kBAEe,gBAAoB;AAAA,MAAjBA,MAAiB,QAAjBA,MAAiB;AAAA,MAATC,EAAS,QAATA,EAAS;;AACjC,MAAIC,MAAM,sBAAV;;AAEA;AACAA,MAAIC,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,QAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,MAAMJ,IAAII,IAAZ,EAArB;AACD,GAFD;;AAIA;AACAN,MAAIO,IAAJ,CAAS,WAAT,EAAsB,UAACL,GAAD,EAAMC,GAAN,EAAc;AAClC,sBAAQK,QAAR,CAAiB,sBAAY,EAAEC,UAAUP,IAAIQ,IAAJ,CAASC,KAArB,EAAZ,CAAjB,EAA2DT,IAAIQ,IAAJ,CAASE,QAApE,EAA8E,UAASC,GAAT,EAAcC,OAAd,EAAuB;AACnG,UAAID,GAAJ,EAAS;AACP,eAAOV,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,wBAAwBQ,GAA7C,CAAP;AACD;;AAED,yBAASE,YAAT,CACE,OADF,EACW;AACPC,iBAAS;AADF,OADX,EAGGd,GAHH,EAGQC,GAHR,EAGa,YAAM;AACjBA,YAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,kCAArB;AACD,OALD;AAMD,KAXD;AAYD,GAbD;;AAeA;AACAL,MAAIO,IAAJ,CAAS,QAAT,EAAmB,mBAASQ,YAAT,CACjB,OADiB,EACR;AACPC,aAAS,KADF;AAEPC,WAAO;AAFA,GADQ,CAAnB;;AAMA;AACAjB,MAAIC,GAAJ,CAAQ,SAAR,gCAAiC,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC7CD,QAAIgB,MAAJ;AACAf,QAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,yBAArB;AACD,GAHD;;AAKAL,MAAIC,GAAJ,CAAQ,KAAR,gCAA6B,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzCA,QAAIC,MAAJ,CAAW,GAAX,EAAgBe,IAAhB,CAAqBjB,IAAII,IAAzB;AACD,GAFD;;AAIA;AACAN,MAAIC,GAAJ,CAAQ,OAAR,EAAiB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC7BA,QAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,OAArB;AACD,GAFD;;AAIA,SAAOL,GAAP;AACD,C","file":"account.js","sourcesContent":["import  mongoose from 'mongoose';\nimport { Router } from 'express';\nimport Account from '../model/account';\nimport bodyParser from 'body-parser';\nimport passport from 'passport';\nimport config from '../config';\n\nimport {generateAccessToken, respond, authenticate} from '../middleware/authMiddleware';\n\nexport default ({ config, db }) => {\n  let api = Router();\n\n  // '/v1/account'\n  api.get('/', (req, res) => {\n    res.status(200).send({ user: req.user });\n  });\n\n  // '/v1/account/register'\n  api.post('/register', (req, res) => {\n    Account.register(new Account({ username: req.body.email}), req.body.password, function(err, account) {\n      if (err) {\n        return res.status(500).send('An error occurred: ' + err);\n      }\n\n      passport.authenticate(\n        'local', {\n          session: false\n      })(req, res, () => {\n        res.status(200).send('Successfully created new account');\n      });\n    });\n  });\n\n  // '/v1/account/login'\n  api.post('/login', passport.authenticate(\n    'local', {\n      session: false,\n      scope: []\n    }), generateAccessToken, respond);\n\n  // '/v1/account/logout'\n  api.get('/logout', authenticate, (req, res) => {\n    req.logout();\n    res.status(200).send('Successfully logged out');\n  });\n\n  api.get('/me', authenticate, (req, res) => {\n    res.status(200).json(req.user);\n  });\n\n  // '/v1/account/ping'\n  api.get('/ping', (req, res) => {\n    res.status(200).send(\"pong!\");\n  });\n\n  return api;\n}\n"]}